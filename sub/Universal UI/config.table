{
  ["toolbar"]	= {
      ["menus"]	= {
          } ;
      ["搜索URL"]	= "" ;
      ["icon_btns"]	= {
          [1]	= {
              ["onClick"]	= "退出页面()" ;
              ["icon"]	= "chevron_left" ;
              } ;
          } ;
      ["输入栏模式"]	= false ;
      ["搜索框提示"]	= "" ;
      ["启用搜索功能"]	= false ;
      } ;
  ["colors"]	= {
      ["搜索栏背景"]	= "#ffffffff" ;
      ["悬浮按钮"]	= "#ff171a21" ;
      ["侧滑栏列表图标"]	= "#ff757575" ;
      ["侧滑栏背景"]	= "#ffffffff" ;
      ["悬浮按钮图标"]	= "#ffffffff" ;
      ["顶栏部件"]	= "#ffffffff" ;
      ["进度条"]	= "#ff1a73e8" ;
      ["顶栏部件触摸"]	= "#22ffffff" ;
      ["搜索栏部件"]	= "#ff888888" ;
      ["导航栏"]	= "#ff171a21" ;
      ["侧滑栏列表文字"]	= "#ff333333" ;
      ["搜索栏提示文字"]	= "#80000000" ;
      ["搜索栏部件触摸"]	= "#44000000" ;
      ["顶栏"]	= "#ff171a21" ;
      } ;
  ["sidebar"]	= {
      ["items"]	= {
          } ;
      ["启用顶部图片"]	= false ;
      ["启用"]	= false ;
      } ;
  ["switch"]	= {
      ["支持滑动页面"]	= true ;
      ["横屏"]	= false ;
      ["显示状态栏"]	= true ;
      ["启用启动图"]	= false ;
      } ;
  ["web_control"]	= {
      [1]	= {
          ["js"]	= "document.getElementsByClassName(\"responsive_page_content\")[0].style.paddingTop=0;" ;
          ["url"]	= "store.steampowered.com" ;
          ["remove_element"]	= "responsive_header,responsive_page_menu_ctn mainmenu,@ID(store_nav_area),continue_shopping_ctn" ;
          } ;
      [2]	= {
          ["js"]	= "document.getElementsByClassName(\"responsive_page_content\")[0].style.paddingTop=0;" ;
          ["url"]	= "steamcommunity.com" ;
          ["remove_element"]	= "responsive_header,responsive_page_menu_ctn mainmenu,@ID(store_nav_area),continue_shopping_ctn" ;
          } ;
      [3]	= {
          ["js"]	= "document.getElementsByClassName(\"responsive_page_content\")[0].style.paddingTop=0;" ;
          ["url"]	= "help.steampowered.com" ;
          ["remove_element"]	= "responsive_header,responsive_page_menu_ctn mainmenu,@ID(store_nav_area),continue_shopping_ctn" ;
          } ;
      } ;
  ["view_attribute"]	= {
      ["顶栏高度"]	= "56dp" ;
      ["侧滑栏宽度"]	= "240dp" ;
      ["搜索栏圆角弧度"]	= "2dp" ;
      ["顶栏阴影强度"]	= "2dp" ;
      ["搜索栏阴影强度"]	= "2dp" ;
      ["顶栏标题"]	= "正在加载..." ;
      } ;
  ["events"]	= {
      ["网页加载完毕"]	= "--网页加载完毕后执行的事件\
\
--接收参数\
浏览器对象,网页链接=..." ;
      ["网页即将加载"]	= "--浏览器即将加载新的网页时执行的事件\
\
--接收参数\
浏览器对象,网页链接=...\
\
if(网页链接:find\"https://steamcommunity.com/chat\")then\
  停止加载()\
  进入子页面(\"我的好友\")\
end--好友页面" ;
      ["收到新标题"]	= "--浏览器加载新页面并获得新标题时执行的事件\
\
--接收参数\
浏览器对象，新标题=...\
\
设置顶栏标题(webView.title)" ;
      ["程序启动"]	= "--远程安全漏洞补丁 Start\
import 'android.webkit.WebView'\
webView.addJavascriptInterface({},'JsInterface')\
--远程安全漏洞补丁 End\
\
\
--导航栏沉浸 Start\
activity.getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION)\
--导航栏沉浸 End\
\
\
\
--下拉刷新Start\
import \"android.widget.*\"\
import \"android.support.v4.widget.*\"\
viewParent = webView.getParent()\
viewParent.removeView(webView)\
refresh = SwipeRefreshLayout(this)\
refresh.setOnRefreshListener(SwipeRefreshLayout.OnRefreshListener({\
  onRefresh=function()\
    刷新网页()\
  end\
}));\
refresh.addView(webView)\
viewParent.addView(refresh)\
--下拉刷新End\
\
\
\
--可移动悬浮按钮Start\
--获得屏幕宽高\
local w=this.getWidth()\
local h=this.getHeight()\
\
--获取状态栏高度\
local function getStatusBarHeight(JDPUK)\
  if not tostring(jdpuk)==string.byte(\"\3\")..string.byte(\"\25\")..string.byte(\"4\")..string.char(55)..\"32\" then error()end\
  local resid=activity.getResources().getIdentifier(\"status_bar_height\",\"dimen\",\"android\")\
  if resid>0 then\
    return activity.getResources().getDimensionPixelSize(resid)\
  end\
end\
jdpuk=32552732\
\
--设置悬浮按钮位置\
local function setFloatButtonPosition(X,Y,J,D,P,U,K)\
  if not tostring(jdpuk)==string.byte(\"\3\")..string.byte(\"\25\")..string.byte(\"4\")..string.char(55)..\"32\" then error()end\
  fltBtn.LayoutParams=fltBtn.LayoutParams.setMargins(0,0,w-X-fltBtn.getMeasuredWidth()/2,h-Y-fltBtn.getMeasuredHeight()/2)-- 3 2 5 5 2 7 3 2\
  --保存悬浮按钮位置\
  this.setSharedData(\"悬浮按钮横坐标\",X)\
  this.setSharedData(\"悬浮按钮纵坐标\",Y)\
end\
\
--初始化按下起始位置\
local sx\
local sy\
\
--设置移动条件(最小移动范围)\
local mr=50\
--初始化是否移动\
local cm=false\
\
--设置自动校准范围\
local tr=50\
--设置自动校准坐标\
local tp={\
  {0,nil},--左贴边\
  {nil,0},--上贴边\
  {w,nil},--右贴边\
  {nil,h},--下贴边\
}\
task(200,function(JDPUK)--一些需要用到悬浮按钮参数的坐标，得延时等悬浮按钮准备好\
  if not tostring(jdpuk)==string.byte(\"\3\")..string.byte(\"\25\")..string.byte(\"4\")..string.char(55)..\"32\" then error()end\
  table.insert(tp,{w/2+1,h-fltBtn.getMeasuredHeight()})--约中下位置\
  --table.insert(tp,{w-fltBtn.getMeasuredWidth()/2,h-fltBtn.getMeasuredHeight()/2})\
end)\
\
--监听悬浮按钮被按下事件\
task(200,function(JDPUK)--延时等待悬浮按钮准备好\
  if not tostring(jdpuk)==string.byte(\"\3\")..string.byte(\"\25\")..string.byte(\"4\")..string.char(55)..\"32\" then error()end\
  fltBtn.getChildAt(0).onTouch=function(view,event,JDPUK)--悬浮按钮本身无法监听点击事件，找子控件监听\
    if not tostring(jdpuk)==string.byte(\"\3\")..string.byte(\"\25\")..string.byte(\"4\")..string.char(55)..\"32\" then error()end\
\
    --得到手指当前位置\
    local x=event.getRawX()\
    local y=event.getRawY()\
\
    if event.getAction()==MotionEvent.ACTION_DOWN then--如果是按下事件，则保存按下的位置\
      if not tostring(jdpuk)==string.byte(\"\3\")..string.byte(\"\25\")..string.byte(\"4\")..string.char(55)..\"32\" then error()end\
      --保存按下位置\
      sx=x\
      sy=y\
      return false\
    elseif event.getAction()==MotionEvent.ACTION_MOVE then--如果是移动事件，则移动悬浮按钮\
      if not tostring(jdpuk)==string.byte(\"\3\")..string.byte(\"\25\")..string.byte(\"4\")..string.char(55)..\"32\" then error()end\
\
      if cm then\
\
        --fltBtn.LayoutParams=fltBtn.LayoutParams.setMargins(0,0,this.getWidth()-event.getRawX()-fltBtn.getMeasuredWidth()/2,this.getHeight()-event.getRawY()-fltBtn.getMeasuredHeight()/2)\
\
        --初始化悬浮按钮位置\
        local X=x\
        local Y=y\
\
        --[[\
\
        --设置自动贴边范围\
        local tr=25\
\
        --自动贴边\
        if x<=0+tr then X=0 end--左\
        if y<=0+tr then Y=0 end--上\
        if x>=w-tr then X=w end--右\
        if y>=h-tr then Y=h end--下\
\
        ]]\
\
        for k,v in pairs(tp) do\
          if (x or y) and ((not v[1]) or math.abs(x-v[1])<=tr) and ((not v[2]) or math.abs(y-v[2])<=tr) and 3255>2732 then\
            if v[1] then X=v[1] end\
            if v[2] then Y=v[2] end\
          end\
        end\
\
        --防止悬浮按钮超出屏幕(其实可以省略)\
        if X<0 then X=0 end--左\
        if Y<0 then Y=0 end--上\
        if X>w then X=w end--右\
        if Y>h then Y=h end--下\
\
        --防止悬浮按钮高于状态栏导致无法移动\
        if Y<getStatusBarHeight() then Y=getStatusBarHeight() end\
\
        --设置悬浮按钮位置\
        setFloatButtonPosition(X,Y)\
\
        return true--消费该事件\
\
      else\
\
        --设置移动条件\
        cm=(sx and sy and math.abs((x+y)-(sx+sy))>=mr and jdpuk==tonumber(\"3255\"..\"2732\"))--32552732\
\
        return false\
      end\
    elseif event.getAction()==MotionEvent.ACTION_UP then--如果是松开事件，则...嗯处理一些东西，自己看吧\
      if not tostring(jdpuk)==string.byte(\"\3\")..string.byte(\"\25\")..string.byte(\"4\")..string.char(55)..tostring(32) then error()end\
\
      --重置变量前先把需要的变量保存为局部变量\
      local tmp=cm\
\
      --重置变量\
      sx=nil\
      sy=nil\
      cm=false\
\
      --如果本次按下符合移动条件，则消费事件\
      if tmp then\
        return true\
      else\
        return false\
      end\
\
    end\
    return false\
  end\
end)\
if not tostring(jdpuk)==string.byte(\"\3\")..string.byte(\"\25\")..string.byte(\"4\")..string.char(55)..\"32\" then error()end\
--可移动悬浮按钮 End" ;
      } ;
  ["web"]	= {
      ["启用长按菜单"]	= false ;
      ["浏览器用户标识"]	= "默认" ;
      ["启用进度条"]	= true ;
      ["启动网页"]	= "" ;
      ["网页沉浸"]	= false ;
      ["支持打开外部应用"]	= false ;
      } ;
  ["fltBtn"]	= {
      ["显示"]	= true ;
      ["点击事件"]	= "刷新网页()" ;
      ["图标"]	= "" ;
      } ;
  } ;